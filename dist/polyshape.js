function Reader(t,e){this.input=t,this.index=0,this.factor=Math.pow(10,e||5),this.lat=0,this.lon=0,this.coords=[],this.geoms=[],this.type}var Polyshape={},Key={Point:"0",Line:"1",Polygon:"2",MultiPoint:"3",Circle:"4",Box:"5",ArgStart:"(",ArgEnd:")",Seperator:" "};Reader.prototype.hasMore=function(){return this.index<this.input.length},Reader.prototype.isData=function(){return this.index<this.input.length&&this.input.charCodeAt(this.index)>=63},Reader.prototype.isEvent=function(){return this.index<this.input.length&&this.input.charCodeAt(this.index)<63},Reader.prototype.peek=function(){return this.input.charAt(this.index)},Reader.prototype.read=function(){return this.lat=this.lon=0,this.input.charAt(this.index++)},Reader.prototype.readLat=function(){return this.lat+=this.readInt(),this.lat/this.factor},Reader.prototype.readLon=function(){return this.lon+=this.readInt(),this.lon/this.factor},Reader.prototype.readInt=function(){var t=0,e=1,o=0;do t=this.input.charCodeAt(this.index++)-63-1,e+=t<<o,o+=5;while(t>=31);return 0!=(1&e)?~(e>>1):e>>1},Reader.prototype.readCoord=function(t){return t.push(this.readLat()),t.push(this.readLon()),t},Reader.prototype.readCoordinates=function(t){for(;this.isData();)t.push(this.readCoord([]));return t},Reader.prototype.readPoint=function(){"Point"==this.type?(this.type="MultiPoint",this.coords=[this.coords]):this.initForNewGeometry("Point"),this.readCoord(this.coords)},Reader.prototype.readLine=function(){"LineString"==this.type?(this.type="MultiLineString",this.coords=[this.coords],this.coords.push(this.readCoordinates([]))):(this.initForNewGeometry("LineString"),this.readCoordinates(this.coords))},Reader.prototype.readPolygon=function(){var t;for("Polygon"==this.type?(this.type="MultiPolygon",this.coords=[this.coords],t=[],this.coords.push(t)):(this.initForNewGeometry("Polygon"),t=this.coords),t.push(this.readCoordinates([]));this.isEvent()&&this.peek()==Key.ArgStart;)this.read(),t.push(this.readCoordinates([]))},Reader.prototype.readMultiPoint=function(){this.type=this.type||"MultiPoint",this.readCoordinates(this.coords)},Reader.prototype.initForNewGeometry=function(t){null!=this.type&&this.geoms.push(this.geometry()),this.type=t,this.coords=[]},Reader.prototype.geometry=function(){return{type:this.type||"Geometry",coordinates:this.coords}},Reader.prototype.finalGeometry=function(){return 0==this.geoms.length?this.geometry():(this.geoms.push(this.geometry()),{type:"GeometryCollection",geometries:this.geoms})},Polyshape.decode=function(t){for(var e,o=new Reader(t);o.hasMore();)switch(e=o.read()){case Key.Point:o.readPoint();break;case Key.Line:o.readLine();break;case Key.Polygon:o.readPolygon();break;case Key.MultiPoint:o.readMultiPoint();break;case Key.Seperator:break;default:throw"Unsupported key: "+e}return o.finalGeometry()},"object"==typeof module&&module.exports&&(module.exports=Polyshape);